{"version":3,"sources":["images/ecardpic.jpg","components/GreetingCard.js","components/CustomizeMessage.js","App.js","reportWebVitals.js","index.js"],"names":["GreetingCard","email","greeting","body","closing","setCustomize","preview","setPreview","className","src","logo","alt","type","onClick","mailto","url","encodeURIComponent","console","log","window","open","CustomizeMessage","setEmail","setGreeting","setBody","setClosing","onSummit","e","preventDefault","width","onSubmit","htmlFor","name","id","value","onChange","target","placeholder","rows","maxLength","App","useState","customize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8d3a9ed.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/ecardpic.c69fb228.jpg\";","import logo from '../images/ecardpic.jpg';\nimport '../App.css';\n\nfunction GreetingCard({email,greeting,body,closing ,setCustomize,preview,setPreview}) {\nconst continueEditing=()=>{\n  setCustomize(true);\n  setPreview(false)\n}\nconst sendEcard = () => {\n  let mailto = `mailto:${email}`;\n  mailto += '?subject=E-Card';\n  mailto += '&body=You have received an e-greeting card.';\n  mailto += '%0D%0A%0D%0A';\n  mailto += 'Go To Greeting Card';\n  mailto += '%0D%0A';\n\n  let url = '';\n  url += `?greeting=${encodeURIComponent(greeting)}`;\n  url += `&body=${encodeURIComponent(body)}`;\n  url += `&closing=${encodeURIComponent(closing)}`;\n\n  mailto += encodeURIComponent(url);\n\n  console.log(mailto);\n\n  window.open(mailto);\n}\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          {greeting}\n        </p>\n        <p>\n          {body}\n        </p>\n        <p>\n          {closing}\n        </p>\n        {preview?\n        <div>\n          <button type=\"button\" onClick={()=>setCustomize(true)}>\n            Continue Editing\n            </button> \n            <button onClick={sendEcard}>Send</button>\n            </div>:\n        <button className=\"App-link\"\n          onClick={continueEditing}\n        >\n          Reshare This Card\n        </button>\n      }\n        \n      </header>\n    </div>\n  );\n}\n\nexport default GreetingCard;\n","import React from \"react\";\nimport \"../App.css\";\nimport logo from \"../images/ecardpic.jpg\";\n\nfunction CustomizeMessage({\n  email,\n  setEmail,\n  greeting,\n  setGreeting,\n  body,\n  setBody,\n  closing,\n  setClosing,\n  setCustomize,\n  setPreview\n}) {\n    const onSummit=(e)=>{\n        e.preventDefault();\n        setPreview(true);\n        setCustomize(false)\n    }\n  return (\n    <>\n      <div className=\"instructions\">\n        <img src={logo} className=\"thumb\" alt=\"logo\" width />\n        <p>\n          <strong>How to Reshare:</strong>\n          <br />\n          Write your own custom message below{\" \"}\n        </p>\n      </div>\n      <form onSubmit={onSummit}>\n        <div>\n        <label htmlFor=\"email\">Recipient Email</label>\n        <br />\n        <input\n            name=\"email\"\n            id=\"email\"\n            type=\"text\"\n            value={email}\n            onChange={(e)=>setEmail(e.target.value)}\n            placeholder=\"Recipient Email\"\n        />\n        </div>\n        <div>\n        <label htmlFor=\"email\">Greeting</label>\n        <br />\n        <input\n            name=\"greeting\"\n            id=\"greeting\"\n            type=\"text\"\n            value={greeting}\n            onChange={(e)=>setGreeting(e.target.value)}\n            placeholder=\"Greeting\"\n        />\n        </div>        \n        <div>\n        <label htmlFor=\"body\">Body</label>\n        <br />\n        <textarea\n            name=\"body\"\n            id=\"body\"\n            type=\"text\"\n            value={body}\n            onChange={(e)=>setBody(e.target.value)}\n            placeholder=\"Body\"\n            rows=\"4\"\n            maxLength=\"200\"\n        ></textarea>\n        </div>        \n        <div>\n        <label htmlFor=\"closing\">Closing</label>\n        <br />\n        <input\n            name=\"closing\"\n            id=\"closing\"\n            type=\"text\"\n            value={closing}\n            onChange={(e)=>setClosing(e.target.value)}\n            placeholder=\"Closing\"\n        />\n        </div> \n        <div>\n            <button type=\"submit\" onClick={onSummit}>Preview</button>\n            </div>       \n      </form>\n    </>\n  );\n}\n\nexport default CustomizeMessage;\n","import \"./App.css\";\nimport GreetingCard from \"./components/GreetingCard\";\nimport { useState } from \"react\";\nimport CustomizeMessage from \"./components/CustomizeMessage\";\n\nfunction App() {\n  const [email, setEmail] = useState(\"\");\n  const [greeting, setGreeting] = useState(\"Dear Mom,\");\n  const [body, setBody] = useState(\"Have a nice day!\");\n  const [closing, setClosing] = useState(\"Love,your Son Hab\");\n  const [customize, setCustomize] = useState(false);\n  const [preview, setPreview] = useState(false);\n  return (\n    <div>\n      {customize ? (\n        <CustomizeMessage\n          email={email}\n          setEmail={setEmail}\n          greeting={greeting}\n          setGreeting={setGreeting}\n          body={body}\n          setBody={setBody}\n          closing={closing}\n          setClosing={setClosing}\n          setCustomize={setCustomize}\n          setPreview={setPreview}\n        />\n      ) : (\n        <GreetingCard\n          email={email}\n          greeting={greeting}\n          body={body}\n          closing={closing}\n          setCustomize={setCustomize}\n          preview={preview}\n          setPreview={setPreview}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}