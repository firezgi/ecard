{"version":3,"sources":["App.js"],"names":["App","useState","newTask","setNewTask","show","setShow","show2","setShow2","selectedIndex","setSelectedIndex","item","lists","setList","checkInput","length","trim","test","dialogAction","action","filter","list","i","style","styles","container","titleWrap","titleName","inBtn","input","onChangeText","type","placeholder","value","btn","onPress","title","color","map","task","index","key","cbTask","onValueChange","handleChange","checkbox","text","popup","popupText","checkButtons","checkButton","StyleSheet","create","flex","backgroundColor","height","width","textAlign","marginBottom","alignItems","justifyContent","margin","fontSize","paddingBottom","fontWeight","fontFamily","padding","borderRadius","flexDirection","alignSelf","border","marginLeft"],"mappings":"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","file":"static/js/app.3fc61731.chunk.js","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\n\nimport {\n  StyleSheet,\n  TextInput,\n  Text,\n  View,\n  Button,\n  CheckBox,\n  ScrollView,\n} from \"react-native\";\n\nexport default function App() {\n  const [newTask, setNewTask] = useState(\"\");\n  const [show, setShow] = useState(false);\n  const [show2, setShow2] = useState(false);\n  const [dialogResponse, setDialogResponse] = useState(false);\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n\n  const [lists, setList] = useState([\n    { item: \"First item\" },\n    { item: \"Second item\" },\n  ]);\n  const onChangeText = (type) => {\n    setNewTask(type);\n  };\n  const add = () => {\n    setList([...lists, { item: newTask }]);\n    setNewTask(\"\");\n  };\n  const checkInput = () => {\n    if (\n      typeof newTask === \"string\" &&\n      newTask.length > 0 &&\n      newTask.trim() &&\n      /^[a-zA-Z0-9- ]*$/.test(newTask)\n    ) {\n      add();\n    } else {\n      setShow2(true);\n      setNewTask(\"\");\n    }\n  };\n  const handleChange = (index) => {\n    setSelectedIndex(index);\n    setShow(!show);\n    \n  };\n  const popup = () => (\n    <View style={styles.popup}>\n      <Text style={styles.popupText}>Are you sure?</Text>\n      <View style={styles.checkButtons}>\n        <View style={styles.checkButton}>\n          <Button\n            color=\"red\"\n            title=\" Yes \"\n            onPress={() => dialogAction(true)}\n          />\n        </View>\n        <View style={styles.checkButton}>\n          <Button title=\" No \" onPress={() => dialogAction(false)} />\n        </View>\n      </View>\n    </View>\n  );\n  const popup2 = () => (\n    <View style={styles.popup}>\n      <Text style={styles.popupText}>Invalid input</Text>\n      <View style={styles.checkButton}>\n        <Button title=\"Ok\" onPress={() => dialogAction(true)} />\n      </View>\n    </View>\n  );\n\n  const dialogAction = (action) => {\n    if (action) {\n      setList(lists.filter((list, i) => i !== selectedIndex));\n    }\n    setShow(false);\n    setShow2(false);\n    setSelectedIndex(-1);\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.titleWrap}>\n        <Text style={styles.titleName}>To Do List</Text>\n      </View>\n\n      <View style={styles.inBtn}>\n        <TextInput\n          style={styles.input}\n          onChangeText={onChangeText}\n          placeholder=\"Add task\"\n          value={newTask}\n        />\n        <View style={styles.btn}>\n          <Button\n            onPress={() => checkInput()}\n            title=\"Add to do list \"\n            color=\"#841584\"\n          />\n        </View>\n        <View style={styles.btn}></View>\n      </View>\n\n      <ScrollView>\n        {lists.map((task, index) => (\n          <View key={index} style={styles.cbTask}>\n            <CheckBox\n              onValueChange={() => handleChange(index)}\n              style={styles.checkbox}\n            />\n            <Text style={styles.text}>{task.item}</Text>\n          </View>\n        ))}\n\n        {show && popup()}\n\n        {show2 && popup2()}\n\n        <StatusBar style=\"auto\" />\n      </ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n  },\n  titleWrap: {\n    backgroundColor: \"blue\",\n    height: \"4em\",\n    width: \"100%\",\n    textAlign: \"center\",\n    marginBottom: 10,\n  },\n\n  titleName: {\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    margin: 20,\n    fontSize: \"2em\",\n    paddingBottom: 20,\n    fontWeight: 900,\n    fontFamily: \"italic\",\n    \n  },\n  input: {\n    backgroundColor: \"yellow\",\n    width: \"80%\",\n    height: \"2em\",\n    padding: 20,\n    marginBottom: 5,\n    borderRadius: 10,\n    fontSize: \"1.2em\",\n  },\n  btn: {\n    marginBottom: 5,\n    padding: 5,\n  },\n  cbTask: {\n    flexDirection: \"row\",\n  },\n  checkbox: {\n    alignSelf: \"center\",\n    margin: 5,\n  },\n  text: {\n    margin: 5,\n    fontSize: \"1.5em\",\n    fontWeight: 100,\n    fontFamily: \"Serif\",\n  },\n  inBtn: {\n    flexDirection: \"row\",\n    // position:'absolute',\n    \n  },\n  popup: {\n    flex: 1,\n    backgroundColor: \"violet\",\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n    flexDirection: \"column\",\n    border: \"solid 3px black\",\n    width: \"80%\",\n    marginLeft: 40,\n    padding: 10,\n    borderRadius: 5,\n  },\n  popupText: {\n    margin: 5,\n    fontSize: \"1.5em\",\n    fontWeight: 100,\n    fontFamily: \"Serif\",\n  },\n  checkButtons: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n  checkButton: {\n    margin: 20,\n    border: \"solid 2px black\",\n    borderRadius: 5,\n  },\n});\n"],"sourceRoot":""}